name: Test, Build, and Deploy 
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v1

    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: example/target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: install node
      uses: actions/setup-node@v1

    - name: install npm deps
      run: cd example && npm ci

    - name: install rust nightly
      run: rustup toolchain install nightly

    - name: make nightly the default
      run: rustup default nightly

    - name: add rust target
      run: rustup target add wasm32-unknown-unknown

    # - name: install wasm-bindgen
    #  run: cargo install wasm-bindgen-cli

    - name: build for release 
      run: npm run build 
      working-directory: ./example

    - name: copy example to dist
      run: cp -R ./example/public/* ./dist

    - name: deploy to gh_pages
      uses: maxheld83/ghpages@master
      env:
        BUILD_DIR: "public/"
        GH_PAT: ${{ secrets.GH_PAT }}
